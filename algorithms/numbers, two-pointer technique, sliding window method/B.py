def main():
    """
    https://contest.yandex.ru/contest/52718/problems
    B. Поиск подстроки
    Марсоход должен исследовать странные каменные структуры: на поверхности скал обнаружена последовательность символов. 
    Предположительно, эту последовательность создали разумные существа. Учёные предполагают, что эта последовательность содержит некие коды или тексты.
    Для расшифровки необходимо выявить в последовательности самую длинную подстроку, состоящую из уникальных символов: 
    наибольший ряд символов, в котором каждый символ встречается только один раз. Это поможет найти ключ к разгадке послания или просто даст понять, 
    случайны ли эти символы, или в них есть порядок.
    Напишите программу, которая принимает на вход строку и находит в ней наибольшую длину подстроки, в которой нет повторяющихся символов. 
    Программа должна вернуть натуральное число — длину этой подстроки.
    Используйте метод скользящего окна для решения задачи. Если в строке встретится дубликат, запомните длину получившейся подстроки и начинайте строить окно заново.
    
    Формат ввода
    Одна строка, состоящая из строчных латинских букв. Длина строки не превосходит 10 000 символов.

    Формат вывода
    Натуральное число — длина наибольшей подстроки с уникальными символами.

    Пример 1
    Ввод
    abcabcbb
    Вывод
    3

    Пример 2
    Ввод
    bbbbb
    Вывод
    1
    """

    data = input().strip()
    seen = set() # Множество для хранения символов текущего окна
    left = 0 # Левый указатель
    max_len = 0 # Максимальная длина подстроки

    for right in range(len(data)):
        # Если символ уже в окне, двигаем left вправо, удаляя символы из seen, пока дубликат не исчезнет.
        while data[right] in seen:
            seen.remove(data[left])
            left += 1
        # Добавляем текущий символ в окно
        seen.add(data[right])
        # Обновляем максимальную длину
        max_len = max(max_len, right - left + 1)
    print(max_len)
    

if __name__ == '__main__':
    main()